{"version":3,"sources":["constants/constants.js","App.js","reportWebVitals.js","index.js"],"names":["ghosts","name","evidence","App","map","ghost","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JASMA,G,KAAS,CACX,CACIC,KAAM,UACNC,SAAU,CAAC,cAAe,eAAgB,0BAE9C,CACID,KAAM,QACNC,SAAU,CAAC,gBAAiB,aAAc,0BAE9C,CACID,KAAM,OACNC,SAAU,CAAC,cAAe,aAAc,cAE5C,CACID,KAAM,OACNC,SAAU,CAAC,aAAc,wBAAyB,cAEtD,CACID,KAAM,MACNC,SAAU,CAAC,cAAe,gBAAiB,eAE/C,CACID,KAAM,UACNC,SAAU,CAAC,cAAe,wBAAyB,cAEvD,CACID,KAAM,cACNC,SAAU,CAAC,eAAgB,aAAc,cAE7C,CACID,KAAM,WACNC,SAAU,CAAC,cAAe,gBAAiB,iBAE/C,CACID,KAAM,QACNC,SAAU,CAAC,cAAe,gBAAiB,cAE/C,CACID,KAAM,SACNC,SAAU,CAAC,gBAAiB,eAAgB,eAEhD,CACID,KAAM,SACNC,SAAU,CAAC,eAAgB,aAAc,0BAE7C,CACID,KAAM,QACNC,SAAU,CAAC,gBAAiB,wBAAyB,gBClC9CC,MARf,WACE,OACE,8BAbKH,EAAOI,KAAI,SAAAC,GAChB,OAAO,gCACL,8BAAK,4BAAIA,EAAMJ,SACf,8BAAMI,EAAMH,SAAS,KACrB,8BAAMG,EAAMH,SAAS,KACrB,8BAAMG,EAAMH,SAAS,KACrB,gCCGSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b7a8f9b9.chunk.js","sourcesContent":["const evidence = {\r\n    emfLevelFive: 'EMF Level 5',\r\n    ghostWriting: 'Ghost Writing',\r\n    fingerPrints: 'Fingerprints',\r\n    spiritBox: 'Spirit Box',\r\n    freezingTemperatures: 'Freezing Temperatures',\r\n    ghostOrb: 'Ghost Orb'\r\n};\r\n\r\nconst ghosts = [\r\n    {\r\n        name: 'Banshee',\r\n        evidence: ['EMF Level 5', 'Fingerprints', 'Freezing Temperatures']\r\n    },\r\n    {\r\n        name: 'Demon',\r\n        evidence: ['Ghost Writing', 'Spirit Box', 'Freezing Temperatures']\r\n    },\r\n    {\r\n        name: 'Jinn',\r\n        evidence: ['EMF Level 5', 'Spirit Box', 'Ghost Orb']\r\n    },\r\n    {\r\n        name: 'Mare',\r\n        evidence: ['Spirit Box', 'Freezing Temperatures', 'Ghost Orb']\r\n    },\r\n    {\r\n        name: 'Oni',\r\n        evidence: ['EMF Level 5', 'Ghost Writing', 'Spirit Box']\r\n    },\r\n    {\r\n        name: 'Phantom',\r\n        evidence: ['EMF Level 5', 'Freezing Temperatures', 'Ghost Orb']\r\n    },\r\n    {\r\n        name: 'Poltergeist',\r\n        evidence: ['Fingerprints', 'Spirit Box', 'Ghost Orb']\r\n    },\r\n    {\r\n        name: 'Revenant',\r\n        evidence: ['EMF Level 5', 'Ghost Writing', 'Fingerprints']\r\n    },\r\n    {\r\n        name: 'Shade',\r\n        evidence: ['EMF Level 5', 'Ghost Writing', 'Ghost Orb']\r\n    },\r\n    {\r\n        name: 'Spirit',\r\n        evidence: ['Ghost Writing', 'Fingerprints', 'Spirit Box']\r\n    },\r\n    {\r\n        name: 'Wraith',\r\n        evidence: ['Fingerprints', 'Spirit Box', 'Freezing Temperatures']\r\n    },\r\n    {\r\n        name: 'Yurei',\r\n        evidence: ['Ghost Writing', 'Freezing Temperatures', 'Ghost Orb']\r\n    }\r\n];\r\n\r\nexport { ghosts, evidence }","import { ghosts } from './constants/constants'\n\nconst renderGhosts = () => {\n  return ghosts.map(ghost => {\n    return <div>\n      <div><b>{ghost.name}</b></div>\n      <div>{ghost.evidence[0]}</div>\n      <div>{ghost.evidence[1]}</div>\n      <div>{ghost.evidence[2]}</div>\n      <hr/>\n    </div>\n  })\n}\n\nfunction App() {\n  return (\n    <div>\n      {renderGhosts()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}